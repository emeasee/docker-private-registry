
# http://stackoverflow.com/questions/5877929/what-does-upstream-mean-in-nginx
upstream docker-registry {
  server localhost:5000;
}

server {
  listen 443;
  server_name base.wizebee.com;

  ssl on;
  #where the files are located on the main or host server
  sl_certificate /etc/ssl/self-signed-certs/docker-registry.crt;
  ssl_certificate_key /etc/ssl/self-signed-certs/docker-registry.key;
  #for a docker image ran on the main server I copied the abover ssl certs to:
  #ssl_certificate  /etc/nginx/ssl/docker-registry.crt;
  #ssl_certificate_key  /etc/nginx/ssl/docker-registry.key;

  proxy_set_header Host             $http_host;   # required for docker client's sake
  proxy_set_header X-Real-IP        $remote_addr; # pass on real client's IP
  proxy_set_header Authorization    ""; # see https://github.com/dotcloud/docker-registry/issues/170

  client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/dotcloud/docker/issues/1486)
  chunkin on;
  error_page 411 = @my_411_error;
  location @my_411_error {
    chunkin_resume;
  }

  location / {
    auth_basic              "Restricted";
    #auth_basic_user_file    docker-registry.htpasswd;
    auth_basic_user_file    /etc/nginx/docker-registry.htpasswd;

  #base reps the 1st part of my subdomain.
    proxy_pass http://docker-registry;
    proxy_set_header Host $host;
    proxy_read_timeout 900;
  }

  location /_ping {
    auth_basic off;
    proxy_pass http://docker-registry;
  }

  location /v1/_ping {
    auth_basic off;
    proxy_pass http://docker-registry;
  }
  
  location /v1/_ping {
    auth_basic off;
    proxy_pass http://docker-registry;
  }
  
}
